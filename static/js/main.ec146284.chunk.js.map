{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","value","onChange","target","props","messageClass","className","src","App","useAuthState","user","signOut","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAoBIA,IAASC,KAAKC,QAChBF,IAASG,cAXI,CACbC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOjB,IAAMC,EAAOX,IAASW,OAChBC,EAAYZ,IAASY,YAmB3B,SAASC,IAOP,OACE,wBAAQC,QANe,WACvB,IAAMC,EAAW,IAAIf,IAASW,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAIrB,iCAUJ,SAASG,IAEP,IAAMC,EAAQC,mBAERC,EAAcT,EAAUU,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IALnC,EAOCC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAPW,sBASgBC,mBAAS,IATzB,mBASXC,EATW,KASAC,EATA,KAWZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQxB,EAAKyB,YAAvBC,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZjB,EAAYkB,IAAI,CACpBC,KAAMV,EACNW,UAAWzC,IAASY,UAAU8B,WAAWC,kBACzCN,MACAC,aATgB,OAYlBP,EAAa,IAEbZ,EAAMyB,QAAQC,eAAe,CAAEC,SAAU,WAdvB,2CAAH,sDAiBjB,OACE,qCACE,iCACE,8BACGlB,GAAYA,EAASmB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,SAEzD,qBAAKC,IAAKjC,OAGZ,iCACE,uBAAOkC,MAAOvB,EAAWwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,UAChE,wBAAQvC,QAASkB,EAAjB,wBAMR,SAASiB,EAAYO,GAAQ,IAAD,EACMA,EAAMN,QAA9BV,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SAEbmB,EAAepB,IAAQ1B,EAAKyB,YAAYC,IAAM,OAAS,WAE7D,OACE,sBAAKqB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKrB,IACV,4BAAIE,OAKKoB,MA7Ff,WAAgB,IAAD,EAEEC,YAAalD,GAArBmD,EAFM,oBAIb,OACE,sBAAKJ,UAAU,MAAf,UACE,iCAwBG/C,EAAKyB,aACV,wBAAQtB,QAAS,kBAAMH,EAAKoD,WAA5B,wBArBE,kCACID,EAAO,cAAC5C,EAAD,IAAe,cAACL,EAAD,UC1BjBmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec146284.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport './App.css';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCHcH4ApmSs_V4yYO68htOetcJePJFYK7w\",\r\n  authDomain: \"mishrole-demo2.firebaseapp.com\",\r\n  projectId: \"mishrole-demo2\",\r\n  storageBucket: \"mishrole-demo2.appspot.com\",\r\n  messagingSenderId: \"137693382039\",\r\n  appId: \"1:137693382039:web:0bcd3b7dceb902d5c230d2\",\r\n  measurementId: \"G-6GTX2NGD75\"\r\n}\r\n\r\nif(!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nfunction App() {\r\n\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        { SignOut() }\r\n      </header>\r\n\r\n      <section>\r\n        { user ? <ChatRoom /> : <SignIn />}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignIn() {\r\n\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n\r\n  return (\r\n    <button onClick={signInWithGoogle}>Sign In with Google</button>\r\n  )\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <button onClick={() => auth.signOut()}>Sign Out</button>\r\n  )\r\n}\r\n\r\nfunction ChatRoom() {\r\n\r\n  const dummy = useRef()\r\n\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limit(25);\r\n\r\n  const [messages] = useCollectionData(query, {idField: 'id'});\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n  const sendMessage = async(e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    });\r\n\r\n    setFormValue('');\r\n\r\n    dummy.current.scrollIntoView({ behavior: 'smooth'});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <div>\r\n          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\r\n        </div>\r\n        <div ref={dummy}></div>\r\n      </main>\r\n\r\n      <form>\r\n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (\r\n    <div className={`message ${messageClass}`}>\r\n      <img src={photoURL}/>\r\n      <p>{text}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}